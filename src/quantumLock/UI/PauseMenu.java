package quantumLock.UI;

import quantumLock.QuantumLock;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class PauseMenu {
    private JButton resumeGameButton;
    public JPanel panel;
    private JButton quitGameButton;
    private JButton restartLevelButton;

    public PauseMenu() {
        panel.setSize(210, 200);
        panel.setVisible(false);
        panel.setEnabled(false);

        resumeGameButton.addActionListener(e -> QuantumLock.resumeGame());
        restartLevelButton.addActionListener(e -> {
            QuantumLock.resumeGame();
            QuantumLock.world.levelReset();
        });
        quitGameButton.addActionListener(e -> QuantumLock.quitGame());
    }

    public void show() {
        panel.setVisible(true);
        panel.setEnabled(true);
    }

    public void hide() {
        panel.setVisible(false);
        panel.setEnabled(false);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        panel.setFocusable(false);
        panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        quitGameButton = new JButton();
        quitGameButton.setFocusable(false);
        Font quitGameButtonFont = this.$$$getFont$$$(null, -1, 22, quitGameButton.getFont());
        if (quitGameButtonFont != null) quitGameButton.setFont(quitGameButtonFont);
        quitGameButton.setText("Quit Game");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(quitGameButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weighty = 0.9;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel.add(spacer3, gbc);
        resumeGameButton = new JButton();
        resumeGameButton.setFocusable(false);
        Font resumeGameButtonFont = this.$$$getFont$$$(null, -1, 22, resumeGameButton.getFont());
        if (resumeGameButtonFont != null) resumeGameButton.setFont(resumeGameButtonFont);
        resumeGameButton.setText("Resume Game");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(resumeGameButton, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(spacer5, gbc);
        restartLevelButton = new JButton();
        restartLevelButton.setFocusable(false);
        Font restartLevelButtonFont = this.$$$getFont$$$(null, -1, 22, restartLevelButton.getFont());
        if (restartLevelButtonFont != null) restartLevelButton.setFont(restartLevelButtonFont);
        restartLevelButton.setText("Restart Level");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(restartLevelButton, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.weighty = 0.9;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel.add(spacer6, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
